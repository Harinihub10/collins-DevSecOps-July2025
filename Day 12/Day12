  75  kubectl
   76  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
   77  ls
   78  chmod +x kubectl
   79  cp kubectl  /usr/bin/
   80  kubectl
   81  kubectl get nodes
   82  cat /etc/passwd
   83  cd /var/lib/jenkins/
   84  ls -la
   85  ls
   86  ls- la
   87  mkdir .kube
   88  cd
   89  ls
   90  mkdir  /var/lib/jenkins/.kube  ; cd /var/lib/jenkins/.kube/  ; wget 3.148.159.94/config ; chmod 777 config





pipeline {
    agent any

    stages {
        stage('Clone the Code') {
            steps {
                git branch: 'main', url: 'https://github.com/mdhack0316/jenkinsdockerapp'
                }
            }
        stage('Building War file') {
            steps{
                sh 'mvn clean package'
            }
        }
        stage('Building Docker Image') {
            steps {
                sh 'docker build -t  mdhack/javaapp:${BUILD_NUMBER} . '
            }
        }
        stage('Testing Docker Container locally') {
            steps {
                sh 'docker rm -f test1'
                sh 'docker run -itd -p 4545:8080 --name test1 mdhack/javaapp:${BUILD_NUMBER}'
            }
        }
        stage('Verifying the APp') {
            steps {
                sh 'sleep 10'
                sh 'curl http://44.248.181.21:4545/java-web-app/ | grep -i sehwag'
            }
        }
        stage('Push docker image') {
            steps {
                sh 'docker login -u mdhack -p $dockerpassword'
                sh 'docker push mdhack/javaapp:${BUILD_NUMBER}'
            }
        }
        stage('Release the App into production') {
            steps {
                input 'Release this to production? '
            }
        }
        stage('Deployment in kubernetes') {
            steps {
                sh 'kubectl delete deployment mayank'
                sh 'kubectl create deployment mayank --image mdhack/javaapp:${BUILD_NUMBER}'
                sh 'kubectl apply -f webappsvc.yml'
            }
        }
        }
        
}
